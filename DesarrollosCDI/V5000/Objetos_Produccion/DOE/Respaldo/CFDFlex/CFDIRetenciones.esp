
[MenuHerramientaCxp.dlg/Dialogo.ListaAcciones]
Otros9=CFDIRetenciones
CFDIRetenciones=(Fin)

[MenuHerramientaCxp.dlg/Acciones.CFDIRetenciones]
Nombre=CFDIRetenciones
Boton=0
NombreDesplegar=Timbrado Retenciones
EnMenu=S
EnBarraAcciones=S
EspacioPrevio=S
TipoAccion=Formas
ClaveAccion=CFDIRetencionD
Activo=S
Visible=S

[Gasto.frm/Acciones.Otros3]
Menu=&Edición
Boton=0
NombreDesplegar=Información Retenciones
GuardarAntes=S
EspacioPrevio=S
Activo=S
ConCondicion=S
Antes=S
Visible=N
DespuesGuardar=S
Expresion=Si SQL(<T>SELECT ISNULL(CFDRetencionTimbrado, 0) FROM Gasto WHERE ID = :nID<T>, Gasto:Gasto.ID) = 0<BR>Entonces<BR> Forma(<T>CFDIRetGastoComp<T>)<BR>Sino<BR> Forma(<T>CFDIRetGastoCompInfo<T>)<BR>Fin
EjecucionCondicion=ConDatos(Gasto:Gasto.ID)
AntesExpresiones=Asigna(Info.ID,Gasto:Gasto.ID)<BR>Asigna(Info.Mov,Gasto:Gasto.Mov)<BR>Asigna(Info.MovID,Gasto:Gasto.MovID)<BR>Asigna(Info.Anuncio, <T><T>)<BR>Asigna(Info.Anuncio, SQL(<T>SELECT TOP 1 CFDIRetSATRetencion.Complemento FROM CFDIRetencionConcepto JOIN CFDIRetSATRetencion ON CFDIRetencionConcepto.CFDIRetClave = CFDIRetSATRetencion.Clave<BR>JOIN GastoD ON CFDIRetencionConcepto.Concepto = GastoD.Concepto WHERE GastoD.ID = :nID AND CFDIRetSATRetencion.Complemento IS NOT NULL<T>, GastoD:GastoD.ID))


[Gasto.frm/Acciones.Otros6]
GuardarAntes=S
Menu=&Edición
Boton=0
NombreDesplegar=Información Complemento SAT
Activo=S
EspacioPrevio=S
Antes=S
Expresion=Si ConDatos(Info.Concepto) = Falso Entonces<BR>    Asigna(Info.Concepto, Mayusculas(SQL(<T>SELECT Concepto FROM GASTOD WHERE ID = :nID<T>,Gasto:Gasto.ID)))<BR>Sino<BR>    Si Info.Concepto <> <T>DIVIDENDOS<T> Entonces           <BR>        Asigna(Info.Concepto, Mayusculas(SQL(<T>SELECT Concepto FROM GASTOD WHERE ID = :nID<T>,Gasto:Gasto.ID)))<BR>    Fin<BR>Fin<BR>Si Info.Concepto = <T>DIVIDENDOS<T><BR>Entonces<BR>  Si SQL(<T>SELECT ISNULL(CFDRetencionTimbrado, 0) FROM Gasto WHERE ID = :nID<T>, Gasto:Gasto.ID) = Falso<BR>  Entonces<BR>    Forma(<T>CFDIRetGastoComplementoEfectivo<T>)<BR>  Sino<BR>    Forma(<T>CFDIRetGastoComplementoEfectivo<T>)<BR>  Fin<BR>Sino<BR>    Si Info.Concepto <> <T>DIVIDENDOS<T><BR>    Entonces<BR>        Error(<T>Funciona únicamente con el Concepto de Dividendos<T>)<BR>    Sino<BR>        Error(<T>Funciona únicamente para el Complemento Dividendo<T>)<BR>    Fin<BR>Fin
AntesExpresiones=Asigna(Info.ID,Gasto:Gasto.ID)<BR>Asigna(Info.Mov,Gasto:Gasto.Mov)<BR>Asigna(Info.MovID,Gasto:Gasto.MovID)<BR>Asigna(Info.Anuncio, <T><T>)<BR>Asigna(Info.Anuncio, SQL(<T>SELECT TOP 1 CFDIRetSATRetencion.Complemento<BR>                          FROM CFDIRetencionConcepto<BR>                          JOIN CFDIRetSATRetencion ON CFDIRetencionConcepto.CFDIRetClave = CFDIRetSATRetencion.Clave<BR>                          JOIN GastoD ON CFDIRetencionConcepto.Concepto = GastoD.Concepto<BR>                          WHERE GastoD.ID = :nID<BR>                          AND CFDIRetSATRetencion.Complemento IS NOT NULL<T>, GastoD:GastoD.ID))
VisibleCondicion=((SQL(<T>SELECT ISNULL(SubClave, :tVacio) FROM MovTipo WHERE Modulo = :tModulo AND Mov = :tMov<T>, <T><T>, <T>GAS<T>, Gasto:Gasto.Mov) = <T>GAS.ESTRETSAT<T>) o (SQL(<T>SELECT ISNULL(SubClave, :tVacio) FROM MovTipo WHERE Modulo = :tModulo AND Mov = :tMov<T>, <T><T>, <T>GAS<T>, Gasto:Gasto.Mov) = <T>GAS.DIV<T>)) y (Gasto:Gasto.Estatus en(EstatusSinAfectar, EstatusProcesar, EstatusBorrador, EstatusPendiente, EstatusConcluido)))

[Gasto.frm/Acciones.Otros4]
GuardarAntes=S
Menu=&Edición
Boton=0
NombreDesplegar=Información Complemento Intereses SAT
Activo=S
EspacioPrevio=S
Antes=S
Expresion=Si ConDatos(Info.Concepto) = Falso Entonces<BR>    Asigna(Info.Concepto, Mayusculas(SQL(<T>SELECT Concepto FROM GASTOD WHERE ID = :nID<T>,Gasto:Gasto.ID)))<BR>Sino<BR>    Si Info.Concepto <> <T>INTERESES<T> Entonces<BR>        Asigna(Info.Concepto, Mayusculas(SQL(<T>SELECT Concepto FROM GASTOD WHERE ID = :nID<T>,Gasto:Gasto.ID)))<BR>    Fin<BR>Fin<BR>Si Info.Concepto = <T>INTERESES<T><BR>Entonces<BR>  Si SQL(<T>SELECT ISNULL(CFDRetencionTimbrado, 0) FROM Gasto WHERE ID = :nID<T>, Gasto:Gasto.ID) = Falso<BR>  Entonces<BR>    Forma(<T>CFDIRetSATIntereses<T>)<BR>  Sino<BR>    Forma(<T>CFDIRetSATInteresesInfo<T>)<BR>  Fin                                                                                                                     <BR>Sino<BR>    Si Info.Concepto <> <T>INTERESES<T><BR>    Entonces<BR>        Error(<T>Funciona únicamente con el Concepto de Intereses<T>)<BR>    Sino<BR>        Error(<T>Funciona únicamente para el Complemento Intereses<T>)<BR>    Fin<BR>Fin
AntesExpresiones=Asigna(Info.ID,Gasto:Gasto.ID)<BR>Asigna(Info.Mov,Gasto:Gasto.Mov)<BR>Asigna(Info.MovID,Gasto:Gasto.MovID)<BR>Asigna(Info.Anuncio, <T><T>)<BR>Asigna(Info.Anuncio, SQL(<T>SELECT TOP 1 CFDIRetSATRetencion.Complemento<BR>                          FROM CFDIRetencionConcepto<BR>                          JOIN CFDIRetSATRetencion ON CFDIRetencionConcepto.CFDIRetClave = CFDIRetSATRetencion.Clave<BR>                          JOIN GastoD ON CFDIRetencionConcepto.Concepto = GastoD.Concepto<BR>                          WHERE GastoD.ID = :nID<BR>                          AND CFDIRetSATRetencion.Complemento IS NOT NULL<T>, GastoD:GastoD.ID))
VisibleCondicion=((SQL(<T>SELECT ISNULL(SubClave, :tVacio) FROM MovTipo WHERE Modulo = :tModulo AND Mov = :tMov<T>, <T><T>, <T>GAS<T>, Gasto:Gasto.Mov) = <T>GAS.ESTRETSATINT<T>) o (SQL(<T>SELECT ISNULL(SubClave, :tVacio) FROM MovTipo WHERE Modulo = :tModulo AND Mov = :tMov<T>, <T><T>, <T>GAS<T>, Gasto:Gasto.Mov) = <T>GAS.INT<T>)) y (Gasto:Gasto.Estatus en(EstatusSinAfectar, EstatusProcesar, EstatusBorrador, EstatusPendiente, EstatusConcluido)))

[Gasto.frm/Acciones.Otros5]
GuardarAntes=S
Menu=&Edición
Boton=0
NombreDesplegar=Información Complemento Enajenacion Acciones SAT
Activo=S
EspacioPrevio=S
Antes=S
Expresion=Si ConDatos(Info.Concepto) = Falso Entonces<BR>    Asigna(Info.Concepto, Mayusculas(SQL(<T>SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(concepto, :tA1, :tA2), :tE1, :tE2), :tI1, :tI2), :tO1, :tO2), :tU1, :tU2) FROM GASTOD WHERE ID = :nID<T>,<T>á<T>, <T>a<T>, <T>é<T>,<T>e<T>, <T>í<T>, <T>i<T>, <T>ó<T>, <T>o<T>, <T>ú<T>,<T>u<T>,Gasto:Gasto.ID)))<BR>Sino<BR>    Si Info.Concepto <> <T>ENAJENACION DE ACCIONES<T> Entonces<BR>        Asigna(Info.Concepto, Mayusculas(SQL(<T>SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(concepto, :tA1, :tA2), :tE1, :tE2), :tI1, :tI2), :tO1, :tO2), :tU1, :tU2) FROM GASTOD WHERE ID = :nID<T>,<T>á<T>, <T>a<T>, <T>é<T>,<T>e<T>, <T>í<T>, <T>i<T>, <T>ó<T>, <T>o<T>, <T>ú<T>,<T>u<T>,Gasto:Gasto.ID)))<BR>    Fin<BR>Fin<BR>Si Info.Concepto = <T>ENAJENACION DE ACCIONES<T><BR>Entonces<BR>  Si SQL(<T>SELECT ISNULL(CFDRetencionTimbrado, 0) FROM Gasto WHERE ID = :nID<T>, Gasto:Gasto.ID) = Falso<BR>  Entonces<BR>    Forma(<T>CFDIEnajenacionGastoComplemento<T>)<BR>  Sino<BR>    Forma(<T>CFDIEnajenacionGastoComplementoInfo<T>)<BR>  Fin<BR>Sino<BR>    Si Info.Concepto <> <T>ENAJENACION DE ACCIONES<T>                                                                            <BR>    Entonces<BR>        Error(<T>Funciona únicamente con el Concepto de Enajenacion de Acciones<T>)<BR>    Sino<BR>        Error(<T>Funciona únicamente para el Complemento Enajenacion de Acciones<T>)<BR>    Fin<BR>Fin
AntesExpresiones=Asigna(Info.ID,Gasto:Gasto.ID)<BR>Asigna(Info.Mov,Gasto:Gasto.Mov)<BR>Asigna(Info.MovID,Gasto:Gasto.MovID)<BR>Asigna(Info.Anuncio, <T><T>)<BR>Asigna(Info.Anuncio, SQL(<T>SELECT TOP 1 CFDIRetSATRetencion.Complemento<BR>                          FROM CFDIRetencionConcepto<BR>                          JOIN CFDIRetSATRetencion ON CFDIRetencionConcepto.CFDIRetClave = CFDIRetSATRetencion.Clave<BR>                          JOIN GastoD ON CFDIRetencionConcepto.Concepto = GastoD.Concepto<BR>                          WHERE GastoD.ID = :nID<BR>                          AND CFDIRetSATRetencion.Complemento IS NOT NULL<T>, GastoD:GastoD.ID))
VisibleCondicion=((SQL(<T>SELECT ISNULL(SubClave, :tVacio) FROM MovTipo WHERE Modulo = :tModulo AND Mov = :tMov<T>, <T><T>, <T>GAS<T>, Gasto:Gasto.Mov) = <T>GAS.ESTRETSATENEJAC<T>) o (SQL(<T>SELECT ISNULL(SubClave, :tVacio) FROM MovTipo WHERE Modulo = :tModulo AND Mov = :tMov<T>, <T><T>, <T>GAS<T>, Gasto:Gasto.Mov) = <T>GAS.ENJ<T>)) y (Gasto:Gasto.Estatus en(EstatusSinAfectar, EstatusProcesar, EstatusBorrador, EstatusPendiente, EstatusConcluido))                                    

[GastoD.tbl/Retencion]
CondicionDespliege=(MovTipo(<T>GAS<T>,Gasto:Gasto.Mov) en (GAS.EST) y ( (SQL(<T>SELECT ISNULL(SubClave, :tVacio) FROM MovTipo WHERE Modulo = :tModulo AND Mov = :tMov<T>, <T><T>, <T>GAS<T>, Gasto:Gasto.Mov) = <T>GAS.ESTRETSAT<T>) o (SQL(<T>SELECT ISNULL(SubClave, :tVacio) FROM MovTipo WHERE Modulo = :tModulo AND Mov = :tMov<T>, <T><T>, <T>GAS<T>, Gasto:Gasto.Mov) = <T>GAS.ESTRETSATINT<T>) o (SQL(<T>SELECT ISNULL(SubClave, :tVacio) FROM MovTipo WHERE Modulo = :tModulo AND Mov = :tMov<T>, <T><T>, <T>GAS<T>, Gasto:Gasto.Mov) = <T>GAS.ESTRETSATENEJAC<T>)) ) o ((MovTipo(<T>GAS<T>,Gasto:Gasto.Mov) en (GAS.S, GAS.P, GAS.A, GAS.G, GAS.GTC, GAS.GP, GAS.C, GAS.CCH, GAS.CP, GAS.DG, GAS.DGP, GAS.OI, GAS.GR, GAS.CTO, GAS.DC)) y (Gasto:Gasto.TieneRetencion) y (Config.GastoVerRetencion1))
ValorRefrescar=Si<BR>  Gasto:Gasto.Estatus en (EstatusSinAfectar, EstatusPorConfirmar, EstatusBorrador)<BR>Entonces<BR>  Si<BR>    General.TipoImpuesto<BR>  Entonces<BR>    Si Config.GASRetencion3Independiente<BR>    Entonces                                        <BR>      (GastoD.Importe)*GastoD:Ret1/100//Info.Retencion1/100<BR>    Sino<BR>      (GastoD.Importe-GastoD.Retencion3)*GastoD:Ret1/100//Info.Retencion1/100<BR>    Fin<BR>  Sino<BR>    Si Config.GASRetencion3Independiente<BR>    Entonces<BR>      Si((MovTipo(<T>GAS<T>,Gasto:Gasto.Mov) en (GAS.S, GAS.P, GAS.A, GAS.G, GAS.GTC, GAS.GP, GAS.C, GAS.CCH, GAS.CP, GAS.DG, GAS.DGP, GAS.OI, GAS.GR, GAS.CTO, GAS.EST)) y Gasto:Gasto.TieneRetencion,  Redondea((GastoD.Importe)*GastoD:Concepto.Retencion/100, 4))<BR>    Sino<BR>      Si((MovTipo(<T>GAS<T>,Gasto:Gasto.Mov) en (GAS.S, GAS.P, GAS.A, GAS.G, GAS.GTC, GAS.GP, GAS.C, GAS.CCH, GAS.CP, GAS.DG, GAS.DGP, GAS.OI, GAS.GR, GAS.CTO, GAS.EST)) y Gasto:Gasto.TieneRetencion,  Redondea((GastoD.Importe-GastoD.Retencion3)*GastoD:Concepto.Retencion/100, 4))<BR>    Fin<BR>  Fin<BR>Sino<BR>  Retencion<BR>Fin

[GastoD.tbl/Retencion2]
CondicionDespliege=(MovTipo(<T>GAS<T>,Gasto:Gasto.Mov) en (GAS.EST) y ( (SQL(<T>SELECT ISNULL(SubClave, :tVacio) FROM MovTipo WHERE Modulo = :tModulo AND Mov = :tMov<T>, <T><T>, <T>GAS<T>, Gasto:Gasto.Mov) = <T>GAS.ESTRETSAT<T>) o (SQL(<T>SELECT ISNULL(SubClave, :tVacio) FROM MovTipo WHERE Modulo = :tModulo AND Mov = :tMov<T>, <T><T>, <T>GAS<T>, Gasto:Gasto.Mov) = <T>GAS.ESTRETSATINT<T>) o (SQL(<T>SELECT ISNULL(SubClave, :tVacio) FROM MovTipo WHERE Modulo = :tModulo AND Mov = :tMov<T>, <T><T>, <T>GAS<T>, Gasto:Gasto.Mov) = <T>GAS.ESTRETSATENEJAC<T>)) ) o ((MovTipo(<T>GAS<T>,Gasto:Gasto.Mov) en (GAS.S, GAS.P, GAS.A, GAS.G, GAS.GTC, GAS.GP, GAS.C, GAS.CCH, GAS.CP, GAS.DG, GAS.DGP, GAS.OI, GAS.GR, GAS.CTO, GAS.DC)) y (Gasto:Gasto.TieneRetencion y Config.Gasto2Retenciones) y (Config.GastoVerRetencion2))
ValorRefrescar=Si<BR>  Gasto:Gasto.Estatus en (EstatusSinAfectar, EstatusPorConfirmar, EstatusBorrador)<BR>Entonces<BR>  Si<BR>    General.TipoImpuesto<BR>  Entonces<BR>    Si Config.GASRetencion3Independiente<BR>    Entonces<BR>      Si(Version.Retencion2BaseImpuesto1, Impuestos, (GastoD.Importe))*GastoD:Ret2/100//Info.Retencion2/100<BR>    Sino<BR>      Si(Version.Retencion2BaseImpuesto1, Impuestos, (GastoD.Importe-GastoD.Retencion3))*GastoD:Ret2/100//Info.Retencion2/100<BR>    Fin<BR>  Sino<BR>    Si Config.GASRetencion3Independiente<BR>    Entonces<BR>      Si((MovTipo(<T>GAS<T>,Gasto:Gasto.Mov) en (GAS.S, GAS.P, GAS.A, GAS.G, GAS.GTC, GAS.GP, GAS.C, GAS.CCH, GAS.CP, GAS.DG, GAS.DGP, GAS.OI, GAS.GR, GAS.CTO, GAS.EST)) y Gasto:Gasto.TieneRetencion y Config.Gasto2Retenciones,  Redondea(Si(Version.Retencion2BaseImpuesto1, Impuestos, (GastoD.Importe))*GastoD:Concepto.Retencion2/100, 4))<BR>    Sino<BR>      Si((MovTipo(<T>GAS<T>,Gasto:Gasto.Mov) en (GAS.S, GAS.P, GAS.A, GAS.G, GAS.GTC, GAS.GP, GAS.C, GAS.CCH, GAS.CP, GAS.DG, GAS.DGP, GAS.OI, GAS.GR, GAS.CTO, GAS.EST)) y Gasto:Gasto.TieneRetencion y Config.Gasto2Retenciones,  Redondea(Si(Version.Retencion2BaseImpuesto1, Impuestos, (GastoD.Importe-GastoD.Retencion3))*GastoD:Concepto.Retencion2/100, 4))<BR>    Fin<BR>  Fin<BR>Sino<BR>  Retencion2<BR>Fin

[GastoD.tbl/Retencion3]
CondicionDespliege=(MovTipo(<T>GAS<T>,Gasto:Gasto.Mov) en (GAS.EST) y ( (SQL(<T>SELECT ISNULL(SubClave, :tVacio) FROM MovTipo WHERE Modulo = :tModulo AND Mov = :tMov<T>, <T><T>, <T>GAS<T>, Gasto:Gasto.Mov) = <T>GAS.ESTRETSAT<T>) o (SQL(<T>SELECT ISNULL(SubClave, :tVacio) FROM MovTipo WHERE Modulo = :tModulo AND Mov = :tMov<T>, <T><T>, <T>GAS<T>, Gasto:Gasto.Mov) = <T>GAS.ESTRETSATINT<T>) o (SQL(<T>SELECT ISNULL(SubClave, :tVacio) FROM MovTipo WHERE Modulo = :tModulo AND Mov = :tMov<T>, <T><T>, <T>GAS<T>, Gasto:Gasto.Mov) = <T>GAS.ESTRETSATENEJAC<T>)) ) o ((MovTipo(<T>GAS<T>,Gasto:Gasto.Mov) en (GAS.S, GAS.P, GAS.A, GAS.G, GAS.GTC, GAS.GP, GAS.C, GAS.CCH, GAS.CP, GAS.DG, GAS.DGP, GAS.OI, GAS.GR, GAS.CTO, GAS.DC)) y Gasto:Gasto.TieneRetencion y (Config.Gasto3Retenciones) y (Config.GastoVerRetencion3))
ValorRefrescar=Si<BR>  Gasto:Gasto.Estatus en (EstatusSinAfectar, EstatusPorConfirmar, EstatusBorrador)<BR>Entonces<BR>  Si<BR>    General.TipoImpuesto<BR>  Entonces<BR>    Importe*GastoD:Ret3/100//Info.Retencion3/100<BR>  Sino<BR>    Si((MovTipo(<T>GAS<T>,Gasto:Gasto.Mov) en (GAS.S, GAS.P, GAS.A, GAS.G, GAS.GTC, GAS.GP, GAS.C, GAS.CCH, GAS.CP, GAS.DG, GAS.DGP, GAS.OI, GAS.GR, GAS.CTO, GAS.EST)) y Gasto:Gasto.TieneRetencion y Config.Gasto3Retenciones,  Redondea(Importe*GastoD:Concepto.Retencion3/100, 4))<BR>  Fin<BR>Sino<BR>  Retencion3<BR>Fin

[GastoConcepto.frm/Acciones.Seleccionar]
Antes=S
AntesExpresiones=Asigna(Info.Concepto,GastoConcepto:Concepto)

[Gasto.frm/Acciones.Afectar]
Expresion=Si<BR>  Gasto:Gasto.Estatus en (EstatusSinAfectar, EstatusPorConfirmar, EstatusBorrador)<BR>Entonces<BR>  Si<BR>    ConDatos(Gasto:Gasto.MovAplica) o Gasto:Gasto.Multiple<BR>  Entonces                                                                     <BR>    Asigna(Temp.Monetario, Nulo)<BR>    Si<BR>      Gasto:Gasto.Multiple<BR>    Entonces<BR>      Asigna(Temp.Monetario, SQL(<T>SELECT SUM(g.Saldo) FROM GastoAplica ga, Gasto g WHERE ga.ID = :nID AND g.Empresa = :tEmpresa AND g.Mov = ga.Aplica AND g.MovID = ga.AplicaID<T>, Gasto:Gasto.ID, Empresa))<BR>      Asigna(Temp.Texto, <T>Antecedentes Multiples<T>)<BR>    Sino<BR>      Asigna(Temp.Monetario, SQL(<T>SELECT Saldo FROM Gasto WHERE Empresa = :tEmpresa AND Mov = :tMov AND MovID = :tMovID<T>, Empresa, Gasto:Gasto.MovAplica, Gasto:Gasto.MovAplicaID))<BR>      Asigna(Temp.Texto, Gasto:Gasto.MovAplica+<T> <T>+Gasto:Gasto.MovAplicaID)<BR>    Fin<BR>    Si((Redondea(Temp.Monetario,0) < Redondea(Gasto:Gasto.Importe-Gasto:Gasto.Retencion+Gasto:Gasto.Impuestos, 0) y (Temp.Monetario<>Nulo) y (MovTipo(<T>GAS<T>, Gasto:Gasto.Mov) noen (GAS.DA, GAS.SR, GAS.ASC))),<BR>      Si(Precaucion(Temp.Texto+<T> por <T>+NumEnTexto(Temp.Monetario,<T>#,.00<T>)+NuevaLinea+<T>Excedente de <T>+NumEnTexto(Gasto:Gasto.Importe-Gasto:Gasto.Retencion+Gasto:Gasto.Impuestos-Temp.Monetario,<T>#,.00<T>)+NuevaLinea+NuevaLinea+<T>¿ Desea Continuar y Generar el Egreso ?<T>,BotonSi, BotonNo)<>BotonSi,AbortarOperacion))<BR>  Fin<BR><BR>  Asigna(Info.Clave, MovTipo(<T>GAS<T>, Gasto:Gasto.Mov))<BR>  Si Info.Clave en (<T>GAS.EST<T>,<T>GAS.G<T>) Entonces<BR>   Asigna(Info.Dato, SQL(<T>SELECT Subclave FROM MovTipo WHERE Clave LIKE :tClave AND Mov LIKE :tMov<T>,Info.Clave, Gasto:Gasto.Mov))<BR>        Asigna(Info.Concepto, Mayusculas(SQL(<T>SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(:tConcepto, :tA1, :tA2), :tE1, :tE2), :tI1, :tI2), :tO1, :tO2), :tU1, :tU2)<T>,Info.Concepto,<T>á<T>, <T>a<T>, <T>é<T>,<T>e<T>, <T>í<T>, <T>i<T>, <T>ó<T>, <T>o<T>, <T>ú<T>,<T>u<T>)))<BR>        		  Caso Info.Dato<BR>            Es <T>GAS.ESTRETSATINT<T> Entonces<BR>                Si Info.Concepto <> <T>INTERESES<T> Entonces<BR>                    Informacion(<T>No esta Indicado el concepto de Intereses<T>)<BR>                    AbortarOperacion<BR>                Fin<BR>                Si (SQL(<T>SELECT Count(Gravado) FROM CFDIRetSATIntereses WHERE ID = :nID<T>,Gasto:Gasto.ID)) = 0 Entonces<BR>                    Informacion(<T>Falta Información del Complemento Intereses<T>)<BR>                    AbortarOperacion<BR>                Fin                                         <BR>            Es <T>GAS.ESTRETSAT<T> Entonces<BR>                Si Info.Concepto <> <T>DIVIDENDOS<T> Entonces<BR>                    Informacion(<T>No esta Indicado el concepto de Dividendos<T>)<BR>                    AbortarOperacion<BR>                Fin<BR>                Si (SQL(<T>SELECT Count(Gravado) FROM CFDIRetGastoComplemento WHERE ID = :nID<T>,Gasto:Gasto.ID)) = 0 Entonces<BR>                    Informacion(<T>Falta Información del Complemento Dividendos<T>)<BR>                    AbortarOperacion<BR>                Fin<BR>            Es <T>GAS.ESTRETSATENEJAC<T> Entonces<BR>                Si Info.Concepto <> <T>ENAJENACION DE ACCIONES<T> Entonces<BR>                    Informacion(<T>No esta Indicado el concepto de Enajenacion de Acciones<T>)<BR>                    AbortarOperacion<BR>                Fin<BR>                Si (SQL(<T>SELECT Count(Gravado) FROM CFDIEnajenacionGastoComplemento WHERE ID = :nID<T>,Gasto:Gasto.ID)) = 0 Entonces<BR>                    Informacion(<T>Falta Información del Complemento Enajenacion de Acciones<T>)<BR>                    AbortarOperacion<BR>                Fin<BR>        		                                Es <T>GAS.INT<T> Entonces Si Info.Concepto <> <T>INTERESES<T> Entonces Informacion(<T>No esta indicando el concepto de Intereses<T>) AbortarOperacion Fin    Si SQL(<T>SELECT Count(Gravado) FROM CFDIRetSATIntereses WHERE ID = :nID<T>,Gasto:Gasto.ID) = 0 Entonces Informacion(<T>Falta información del complemento de Intereses<T>) AbortarOperacion Fin Es <T>GAS.DIV<T> Entonces Si Info.Concepto <> <T>DIVIDENDOS<T>  Entonces Informacion(<T>No esta indicando el concepto de Dividendos<T>) AbortarOperacion Fin Si SQL(<T>SELECT Count(Gravado) FROM CFDIRetGastoComplemento WHERE ID = :nID<T>,Gasto:Gasto.ID) = 0 Entonces Informacion(<T>Falta información del complemento de Dividendos<T>) AbortarOperacion Fin 		  Es <T>GAS.ENJ<T> Entonces Si Info.Concepto <> <T>ENAJENACION DE ACCIONES<T> Entonces Informacion(<T>No esta indicando el concepto de Enajenacion de Acciones<T>) AbortarOperacion Fin Si SQL(<T>SELECT Count(Gravado) FROM CFDIEnajenacionGastoComplemento WHERE ID = :nID<T>,Gasto:Gasto.ID) = 0 Entonces Informacion(<T>Falta información del complemento de Enajenacion de Acciones<T>) AbortarOperacion Fin 		  Fin<BR>     Fin<BR><BR>  Afectar(<T>GAS<T>, Gasto:Gasto.ID, Gasto:Gasto.Mov, Gasto:Gasto.MovID, <T>Todo<T>, <T><T>, <T>Gasto<T>)<BR>Sino<BR>  Caso Gasto:Gasto.Estatus<BR>    Es EstatusPendiente Entonces<BR>      Asigna(Info.Modulo, <T>GAS<T>)<BR>      Asigna(Info.Mov, Gasto:Gasto.Mov)<BR>      Asigna(Info.MovID, Gasto:Gasto.MovID)<BR>      Asigna(Afectar.Modulo, <T>GAS<T>)<BR>      Asigna(Afectar.ID, Gasto:Gasto.ID)<BR>      Asigna(Afectar.Mov, Gasto:Gasto.Mov)<BR>      Asigna(Afectar.MovID, Gasto:Gasto.MovID)<BR>      Asigna(Afectar.FormaCaptura, <T>Gasto<T>)<BR>      Asigna(Info.TituloDialogo, Afectar.Mov+<T> <T>+Afectar.MovID)<BR>      Si<BR>        ConfigModulo(Info.Modulo, <T>FlujoAbierto<T>) = <T>Si<T><BR>      Entonces<BR>        Si <BR>          Forma(<T>GenerarMovFlujo<T>)<BR>        Entonces<BR>          Asigna(Afectar.GenerarMov, Info.MovGenerar)<BR>          Generar(Afectar.Modulo, Afectar.ID, Afectar.Mov, Afectar.MovID, <T>Todo<T>, Afectar.GenerarMov, Afectar.FormaCaptura)<BR>        Fin<BR>      Sino<BR>        Caso MovTipo(<T>GAS<T>, Gasto:Gasto.Mov)<BR>          Es GAS.S  Entonces Dialogo(<T>GenerarGastoSolicitud<T>)<BR>          Es GAS.P  Entonces Dialogo(<T>GenerarGastoProvision<T>)<BR>          Es GAS.A  Entonces Dialogo(<T>GenerarGastoAnticipo<T>)<BR>          Es GAS.PR Entonces Dialogo(<T>GenerarGastoPresupuesto<T>)<BR>        Fin<BR>      Fin<BR>    Es EstatusRecurrente Entonces<BR>      Asigna(Afectar.ID, Gasto:Gasto.ID)<BR>      Asigna(Afectar.Mov, Gasto:Gasto.Mov)<BR>      Asigna(Afectar.MovID, Gasto:Gasto.MovID)<BR>      Asigna(Afectar.FormaCaptura, <T>Gasto<T>)<BR>      Asigna(Info.TituloDialogo, Gasto:Gasto.Mov+<T> <T>+Gasto:Gasto.MovID)<BR>      Dialogo(<T>GenerarGastoRecurrente<T>)<BR>  Fin<BR>Fin
